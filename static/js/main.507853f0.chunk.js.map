{"version":3,"sources":["files/Images/chucknorris_logo_coloured_small@2x.png","components/Header/styles.js","components/Header/index.js","pages/Home/styles.js","components/Title/styles.js","components/Loader/styles.js","components/ListItem/styles.js","components/ListItem/index.js","pages/Home/index.js","store/list/actions.js","services/api.js","components/Button/styles.js","pages/Category/styles.js","pages/Category/index.js","routes.js","styles/global.js","services/history.js","store/list/reducer.js","store/rootReducer.js","store/list/sagas.js","store/rootSagas.js","store/index.js","App.js","index.js"],"names":["module","exports","Logo","styled","img","Header","to","src","Chuck","Container","div","List","ul","Title","h2","Loader","CircularProgress","Item","li","LinkTo","Link","memo","data","onClick","localStorage","setItem","Home","list","useSelector","state","listItems","useState","loading","setLoading","dispatch","useDispatch","useEffect","length","type","handleData","size","map","category","index","key","api","axios","create","baseURL","Button","a","Icon","Text","p","Category","setData","setCategory","get","response","status","getItem","icon_url","value","Routes","path","exact","component","createGlobalStyle","history","createBrowserHistory","reducer","action","combineReducers","createList","call","put","all","takeLatest","rootSaga","listSagas","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhacer","applyMiddleware","store","createStore","rootReducer","run","rootSagas","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.507853f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chucknorris_logo_coloured_small@2x.39b94c0e.png\";","import styled from 'styled-components';\r\n\r\nexport const Logo = styled.img`\r\n    max-width: 250px;\r\n    display: block;\r\n    margin: 30px auto 0 auto;\r\n`","import React from 'react';\r\nimport { Logo } from './styles';\r\nimport { Link } from 'react-router-dom'\r\nimport Chuck from '../../files/Images/chucknorris_logo_coloured_small@2x.png'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <Link to=\"/react-chucknorris\"><Logo src={Chuck} /></Link>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    margin: 30px auto;\r\n`\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 24px;\r\n    color: white;\r\n    text-align: center;\r\n    margin: 30px 0 ;\r\n`","import styled from 'styled-components';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Loader = styled(CircularProgress)`\r\n    margin: 0 auto !important;\r\n    display: block !important ;\r\n    color: #f15a24 !important;\r\n`","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Item = styled.li`\r\n    width: 300px;\r\n    padding: 20px 0;\r\n    margin: 8px 0;\r\n    font-size: 18px;\r\n    color: white;\r\n    background: #f15a24;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n    font-weight: bold;\r\n    border: 5px solid #c1481c;\r\n    text-transform: uppercase;\r\n\r\n    @media (min-width: 1024px) {\r\n        width: 500px;\r\n    }\r\n`\r\n\r\nexport const LinkTo = styled(Link)`\r\n    text-decoration: none;\r\n`","import React, { memo } from 'react';\r\nimport { Item, LinkTo } from './styles';\r\n\r\nfunction ListItem({ data }) {\r\n    function handleClick() {\r\n        localStorage.setItem(\"category\", data)\r\n    }\r\n\r\n    return (\r\n        <LinkTo to=\"/react-chucknorris/category\"><Item onClick={handleClick}>{data}</Item></LinkTo>\r\n    );\r\n}\r\n\r\nexport default memo(ListItem)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, List } from './styles';\r\nimport { Title } from '../../components/Title/styles'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as ListActions from \"../../store/list/actions\";\r\nimport { Loader } from '../../components/Loader/styles';\r\nimport ListItem from '../../components/ListItem';\r\n\r\nexport default function Home() {\r\n    const list = useSelector(state => state.listItems);\r\n    const [loading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        handleData();\r\n    }, [list]);\r\n\r\n    function handleData() {\r\n        if (list.length > 0) {\r\n            setLoading(false);\r\n            return\r\n        };\r\n        dispatch(ListActions.updateListRequest());\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Title>Hey Pal, this is a list with my best jokes, I hope you enjoy</Title>\r\n            {loading ? <Loader size={50} /> : (\r\n                <List>\r\n                    {list && list.map((category, index) => (\r\n                        <ListItem data={category} key={index} />\r\n                    ))}\r\n                </List>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n","export function updateListRequest() {\r\n    return {\r\n        type: 'UPDATE_LIST',\r\n    }\r\n};\r\n\r\nexport function updateListSuccess(list) {\r\n    return {\r\n        type: 'UPDATE_LIST_SUCCESS',\r\n        list\r\n    }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.chucknorris.io/jokes/'\r\n});\r\n\r\nexport default api;","import styled from 'styled-components';\r\n\r\nexport const Button = styled.a`\r\n    width: 100%;\r\n    padding: 15px;\r\n    background:  #f15a24;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n    font-weight: bold;\r\n    border: 5px solid #c1481c;\r\n    color: white;\r\n    margin: 0 auto;\r\n    display: block;\r\n    cursor: pointer;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    margin: 30px auto;\r\n    background: white;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n`\r\nexport const Icon = styled.img`\r\n    display: block;\r\n    margin: 0 auto;\r\n`\r\n\r\nexport const Text = styled.p`\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    margin: 20px 0;\r\n`\r\n","import React, { useState, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport { Loader } from '../../components/Loader/styles';\r\nimport { Title } from '../../components/Title/styles';\r\nimport { Button } from '../../components/Button/styles';\r\nimport { Container, Icon, Text } from './styles';\r\n\r\nexport default function Category() {\r\n    const [data, setData] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setCategory(localStorage.getItem(\"category\"));\r\n        handleData();\r\n    }, [category]);\r\n\r\n    async function handleData() {\r\n        setLoading(true);\r\n        if (category) {\r\n            const response = await api.get(`random?category=${category}`);\r\n            if (response.status === 200) {\r\n                setData(response.data);\r\n            }\r\n            setLoading(false);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Title>This is my nice repertory about {category} jokes</Title>\r\n            <Container>\r\n                {loading ? <Loader size={30} /> : (\r\n                    <>\r\n                        <Icon src={data.icon_url} />\r\n                        <Text>{data.value}</Text>\r\n                    </>\r\n                )}\r\n            </Container>\r\n            <Button onClick={handleData}>Try another joke!</Button>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Category from './pages/Category';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/react-chucknorris\" exact component={Home} />\r\n                <Route path=\"/react-chucknorris/category\" component={Category} />\r\n            </Switch>\r\n        </>\r\n    )\r\n};","import { createGlobalStyle } from 'styled-components'\r\n\r\n\r\nexport default createGlobalStyle`\r\n\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        background: #191919;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    body, input, button {\r\n        font: 14px Roboto, sans-serif;\r\n    }\r\n\r\n    #root {\r\n        max-width: 1320px;\r\n        margin: 0 auto;\r\n        padding: 0 20px 50px;\r\n    }\r\n`;","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","\r\nfunction reducer(state = [], action) {\r\n    switch (action.type) {\r\n        case \"UPDATE_LIST_SUCCESS\":\r\n            const { list } = action\r\n            return list;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport listItems from './list/reducer';\r\n\r\nexport default combineReducers({\r\n    listItems,\r\n});","import api from '../../services/api';\r\nimport { call, put, all, takeLatest, select } from 'redux-saga/effects';\r\nimport { updateListSuccess } from './actions';\r\n\r\nfunction* createList() {\r\n    const response = yield call(api.get, 'categories');\r\n    yield put(updateListSuccess(response.data));\r\n}\r\n\r\nexport default all([\r\n    takeLatest('UPDATE_LIST', createList),\r\n]);","import { all } from 'redux-saga/effects';\r\n\r\nimport listSagas from './list/sagas';\r\n\r\nexport default function* rootSaga() {\r\n    return yield all([listSagas])\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSagas from './rootSagas';\r\n\r\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\r\nconst sagaMiddleware = createSagaMiddleware({\r\n    sagaMonitor\r\n});\r\n\r\nconst enhacer = process.env.NODE_ENV === 'development' ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\r\n\r\nconst store = createStore(rootReducer, enhacer);\r\n\r\nsagaMiddleware.run(rootSagas);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\nimport GlobalStyle from './styles/global';\r\nimport { Provider } from 'react-redux';\r\nimport './config/reactotronConfig';\r\nimport history from './services/history';\r\nimport store from './store/index';\r\n\r\nexport default function App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <Routes>\r\n                </Routes>\r\n                <GlobalStyle></GlobalStyle>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}